name: Test
on: [workflow_dispatch]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
  deploy:
    needs: [test] ## Uncomment if you want to ensure this runs after the test job, in the same workflow
    ## This job will only run if the test workflow succeeded
    # Only run if the test workflow succeeded
    runs-on: ubuntu-latest
    steps:
#      - name: Deploy
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./public
      - name: Get code   ## This step checks out the code from the repository
        uses: actions/checkout@v3   ## This action checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - name: Install NodeJS  ## This step sets up Node.js for the workflow
        uses: actions/setup-node@v3   ## This action sets up a Node.js environment for use in the workflow
        with:
          node-version: 18   ## Specify the version of Node.js to use
      - name: Install dependencies  ## This step installs the project dependencies
        run: npm ci   ## This command installs dependencies from package-lock.json, ensuring a clean and reproducible build, this is better than `npm install` for CI environments
      - name: Build project   ## This step builds the project
        run: npm run build  ## This command runs the build script defined in package.json named  """build": "vite build"""
      - name: Deploy  ## This step deploys the project
        run: echo "Deploying ..."  ## Replace this with your actual deployment command, such as uploading to a server or cloud service
      - name: Deploy to GitHub Pages  
        uses: peaceiris/actions-gh-pages@v3  ## This action deploys files to GitHub Pages  
        with: 
          # use ONE of these
          # github_token: ${{ secrets.GITHUB_TOKEN }}  # use if your org allows write
          # personal_token: ${{ secrets.GH_PAT }}       # use if your org disables write on GITHUB_TOKEN 
          github_token: ${{ secrets.GITHUB_TOKEN }}   ## This token is used to authenticate the action with GitHub
          publish_dir: ./dist  # Your built files folder   ## Specify the directory containing the files to be published to GitHub Pages
          force_orphan: true
          keep_files: false
          # Enable for debugging:
      - name: Debug - Show dist contents
        run: |
          echo "Build directory contents:"
          ls -la dist/
          echo "Checking index.html exists..."
          [ -f dist/index.html ] || echo "ERROR: index.html missing!"
      - name: Verify build output
        run: |
          ls -R dist
          [ -f dist/index.html ] || exit 1